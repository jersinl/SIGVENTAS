package datos;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.util.ArrayList;

import entidades.entCargo;
import entidades.entEmpleado;
import entidades.entPersona;
import entidades.entSucursal;

public class daoEmpleado {
	
	public static daoEmpleado _Instancia;
	private daoEmpleado() {};
	public static daoEmpleado Instancia() {
		if (_Instancia == null) {
			_Instancia = new daoEmpleado();
		}
		return _Instancia;
	}
	
	public entEmpleado VerificarAcceso(String _Usuario, String _Pass) throws Exception {
		Connection cn = null;
		entEmpleado u = null;
		try {

			cn = Conexion.Instancia().getConnection();
			CallableStatement cst = cn.prepareCall("{call VerificarAcceso(?,?)}");
			cst.setString(1, _Usuario);
			cst.setString(2, _Pass);
			ResultSet rs = cst.executeQuery();
			if (rs.next()) {
				u = new entEmpleado();
				u.setIdEmpleado(rs.getInt("idEmpleado"));
				u.setUsuario(rs.getString("usuario"));
				u.setPassword(rs.getString("password"));
				u.setFechaIngreso(rs.getDate("fechaIngreso"));
				u.setFechaTermino(rs.getDate("fechaTermino"));
				u.setEstado(rs.getString("estado"));
					entPersona c = new entPersona();
					c.setIdPersona(rs.getInt("idPersona"));
					c.setDni(rs.getString("dni"));
					c.setNombres(rs.getString("Nombre"));
					c.setApellidos(rs.getString("Apellidos"));
					c.setSexo(rs.getBoolean("Sexo"));
					c.setFechaNacimiento(rs.getDate("fechaNacimiento"));
					c.setTelefono(rs.getInt("telefono"));
					c.setCorreo(rs.getString("correo"));
				u.setIdPersona(c);
					entCargo car =  new entCargo();
					car.setIdCargo(rs.getInt("idCargo"));
					car.setNombre(rs.getString("Nombre"));
					car.setSueldo(rs.getDouble("sueldo"));
					car.setIngreso(rs.getTime("Ingreso"));
					car.setSalida(rs.getTime("Salida"));
				u.setIdCargo(car);
					entSucursal s = new entSucursal();
					s.setIdSucursal(rs.getInt("idSucursal"));
					s.setNombre(rs.getString("Nombre"));
					s.setDireccion(rs.getString("Direccion"));
				u.setIdSucursal(s);
					
				System.out.println("Usuario ok!");
			}
			return u;
		} catch (Exception e) {
			System.out.println("(Persistencia)Nose se puede conectar con el usuario!!!!!! :(  : "+e);
			throw e;
		} finally {
			cn.close();
		}
	}


	
	public ArrayList<entEmpleado> ListarEmpleados()throws Exception{
		entEmpleado emp = null;
		ArrayList<entEmpleado> listaEmpls = null;
		Connection cn = null;
		CallableStatement cstm = null;
		ResultSet rs = null;
	try {
		cn = Conexion.Instancia().getConnection();
		cstm = cn.prepareCall("{call splistarEmpleados}");
		rs = cstm.executeQuery();
		listaEmpls =  new ArrayList<entEmpleado>();
		while(rs.next()){
			emp= new entEmpleado();
			emp.setIdEmpleado(rs.getInt(1));
			emp.setUsuario(rs.getString(2));
			emp.setPassword(rs.getString(3));
			emp.setFechaIngreso(rs.getDate(4));
			emp.setFechaTermino(rs.getDate(5));
			emp.setEstado(rs.getString(6));
				entPersona p = new entPersona();
				p.setIdPersona(rs.getInt(7));
				p.setDni(rs.getString(8));
				p.setNombres(rs.getString(9));
				p.setApellidos(rs.getString(10));
				p.setSexo(rs.getBoolean(11));
				p.setFechaNacimiento(rs.getDate(12));
				p.setTelefono(rs.getInt(13));
				p.setCorreo(rs.getString(14));
			emp.setIdPersona(p);
				entCargo c = new entCargo();
				c.setIdCargo(rs.getInt(15));
				c.setNombre(rs.getString(16));
				c.setSueldo(rs.getDouble(17));
				c.setIngreso(rs.getTime(18));
				c.setSalida(rs.getTime(19));
			emp.setIdCargo(c);
				entSucursal s = new entSucursal();
				s.setIdSucursal(rs.getInt(20));
				s.setNombre(rs.getString(21));
				s.setDireccion(rs.getString(22));
			emp.setIdSucursal(s);
			listaEmpls.add(emp);
		}
		System.out.println("(Persistencia)listado exitoso... ");
		
	} catch (Exception e) {				
		System.out.println("(Persistencia)Nose puede listar!!!!!! :(  : "+e);
		throw e;
	}finally{
		cn.close();
		cstm.close();
		rs.close();
	}
	return listaEmpls;
	
	}
	
	/*
	
	public boolean insertarOficina(Oficina oficina)throws Exception{
		Connection cn = null;
		CallableStatement cstm = null;
		boolean insertar = false;
	try {
		cn = Conexion.Instancia().getConnection();
		cstm = cn.prepareCall("{call INSERTAR_OFICINA(?,?,?)}");

		cstm.setString(1,oficina.getNombre());
		cstm.setInt(2,oficina.getPiso());
		cstm.setString(3,oficina.getPabellon());
		
		int x = cstm.executeUpdate();
		if(x>0){insertar = true;}
		
		System.out.println("(Persistencia)Registro de Oficina Exitoso... ");
		
	} catch (Exception e) {				
		System.out.println("(Persistencia)error al resgistrar Oficina !!!!!! :(  : "+e);
		throw e;
	}finally{
		cn.close();
		cstm.close();
	}
	return insertar;
	
	}
	
	
	public boolean EditarOficina(Oficina oficina)throws Exception{
		Connection cn = null;
		CallableStatement cstm = null;
		boolean editar = false;
	try {
		cn = Conexion.Instancia().getConnection();
		cstm = cn.prepareCall("{call EDITAROFICINA(?,?,?,?)}");
		cstm.setInt(1,oficina.getId());
		cstm.setString(2,oficina.getNombre());
		cstm.setInt(3,oficina.getPiso());
		cstm.setString(4,oficina.getPabellon());
		
		int x = cstm.executeUpdate();
		if(x>0){editar = true;}
		
		System.out.println("(Persistencia)actualizacion de oficina exitoso... ");
		
	} catch (Exception e) {				
		System.out.println("(Persistencia)Error al actualizar oficina !!!!!! :(  : "+e);
		throw e;
	}finally{
		cn.close();
		cstm.close();
	}
	return editar;
	
	}
	
	public boolean EliminarOficina(int idOficina)throws Exception{
		Connection cn = null;
		CallableStatement cstm = null;
		boolean eliminar = false;
	try {
		cn = Conexion.Instancia().getConnection();
		cstm = cn.prepareCall("{call ELIMINAROFICINA(?)}");
		cstm.setInt(1,idOficina);
				
		int x = cstm.executeUpdate();
		if(x>0){eliminar = true;}
		
		System.out.println("(Persistencia)Se Elimino Oficina... ");
		
	} catch (Exception e) {				
		System.out.println("(Persistencia)Nose puede Eliminar la Oficina !!!!!! :(  : "+e);
		throw e;
	}finally{
		cn.close();
		cstm.close();
	}
	return eliminar;
	
	}
	
	public Oficina devolverOficinaId(int  idOficina)throws Exception{
		Connection cn = null;
		CallableStatement cstm = null;
		
		ResultSet rs = null;
		Oficina oficina= null;
		boolean editar = false;
	try {
		cn = Conexion.Instancia().getConnection();
		cstm = cn.prepareCall("{call DEVOLVEROFICINAID(?)}");
		cstm.setInt(1,idOficina);
		rs = cstm.executeQuery();
		while(rs.next()){
			oficina= new Oficina();
			oficina.setId(rs.getInt(1));
			oficina.setNombre(rs.getString(2));
			oficina.setPiso(rs.getInt(3));
			oficina.setPabellon(rs.getString(4));				
		}
		System.out.println("(Persistencia)devolverOficinaId exitoso... ");
		
	} catch (Exception e) {				
		System.out.println("(Persistencia)Error al devolverOficinaId !!!!!! :(  : "+e);
		throw e;
	}finally{
		cn.close();
		cstm.close();
		rs.close();
	}
	return oficina;
	
	}
	*/
	
}
