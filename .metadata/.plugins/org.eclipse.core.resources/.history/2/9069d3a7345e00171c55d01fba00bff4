package datos;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.util.ArrayList;

import entidades.entCargo;
import entidades.entEmpleado;
import entidades.entPersona;
import entidades.entSucursal;

public class daoEmpleado {
	
	public static daoEmpleado _Instancia;
	private daoEmpleado() {};
	public static daoEmpleado Instancia() {
		if (_Instancia == null) {
			_Instancia = new daoEmpleado();
		}
		return _Instancia;
	}
	
	public entEmpleado VerificarAcceso(String _Usuario, String _Pass) throws Exception {
		Connection cn = null;
		entEmpleado u = null;
		try {

			cn = Conexion.Instancia().getConnection();
			CallableStatement cst = cn.prepareCall("{call VerificarAcceso(?,?)}");
			cst.setString(1, _Usuario);
			cst.setString(2, _Pass);
			ResultSet rs = cst.executeQuery();
			if (rs.next()) {
				u = new entEmpleado();
				u.setIdEmpleado(rs.getInt("idEmpleado"));
				u.setUsuario(rs.getString("usuario"));
				u.setPassword(rs.getString("password"));
				u.setFechaIngreso(rs.getDate("fechaIngreso"));
				u.setFechaTermino(rs.getDate("fechaTermino"));
				u.setEstado(rs.getString("estado"));
					entPersona c = new entPersona();
					c.setIdPersona(rs.getInt("idPersona"));
					c.setDni(rs.getString("dni"));
					c.setNombres(rs.getString("Nombre"));
					c.setApellidos(rs.getString("Apellidos"));
					c.setSexo(rs.getString("Sexo"));
					c.setFechaNacimiento(rs.getDate("fechaNacimiento"));
					c.setTelefono(rs.getInt("telefono"));
					c.setCorreo(rs.getString("correo"));
				u.setIdPersona(c);
					entCargo car =  new entCargo();
					car.setIdCargo(rs.getInt("idCargo"));
					car.setNombre(rs.getString("Nombre"));
					car.setSueldo(rs.getDouble("sueldo"));
					car.setIngreso(rs.getTime("Ingreso"));
					car.setSalida(rs.getTime("Salida"));
				u.setIdCargo(car);
					entSucursal s = new entSucursal();
					s.setIdSucursal(rs.getInt("idSucursal"));
					s.setNombre(rs.getString("Nombre"));
					s.setDireccion(rs.getString("Direccion"));
				u.setIdSucursal(s);
					
				System.out.println("Usuario ok!");
			}
			return u;
		} catch (Exception e) {
			System.out.println("(Persistencia)Nose se puede conectar con el usuario!!!!!! :(  : "+e);
			throw e;
		} finally {
			cn.close();
		}
	}


	
	public ArrayList<entEmpleado> ListarEmpleados()throws Exception{
		entEmpleado emp = null;
		ArrayList<entEmpleado> listaEmpls = null;
		Connection cn = null;
		CallableStatement cstm = null;
		ResultSet rs = null;
	try {
		cn = Conexion.Instancia().getConnection();
		cstm = cn.prepareCall("{call splistarEmpleados}");
		rs = cstm.executeQuery();
		listaEmpls =  new ArrayList<entEmpleado>();
		while(rs.next()){
			emp= new entEmpleado();
			emp.setIdEmpleado(rs.getInt(1));
			emp.setUsuario(rs.getString(2));
			emp.setPassword(rs.getString(3));
			emp.setFechaIngreso(rs.getDate(4));
			emp.setFechaTermino(rs.getDate(5));
			emp.setEstado(rs.getString(6));
				entPersona p = new entPersona();
				p.setIdPersona(rs.getInt(7));
				p.setDni(rs.getString(8));
				p.setNombres(rs.getString(9));
				p.setApellidos(rs.getString(10));
				p.setSexo(rs.getString(11));
				p.setFechaNacimiento(rs.getDate(12));
				p.setTelefono(rs.getInt(13));
				p.setCorreo(rs.getString(14));
			emp.setIdPersona(p);
				entCargo c = new entCargo();
				c.setIdCargo(rs.getInt(15));
				c.setNombre(rs.getString(16));
				c.setSueldo(rs.getDouble(17));
				c.setIngreso(rs.getTime(18));
				c.setSalida(rs.getTime(19));
			emp.setIdCargo(c);
				entSucursal s = new entSucursal();
				s.setIdSucursal(rs.getInt(20));
				s.setNombre(rs.getString(21));
				s.setDireccion(rs.getString(22));
			emp.setIdSucursal(s);
			listaEmpls.add(emp);
		}
		System.out.println("(Persistencia)listado exitoso... ");
		
	} catch (Exception e) {				
		System.out.println("(Persistencia)Nose puede listar!!!!!! :(  : "+e);
		throw e;
	}finally{
		cn.close();
		cstm.close();
		rs.close();
	}
	return listaEmpls;
	
	}
	
	public boolean insertarEmpleado(entEmpleado emp)throws Exception{
		Connection cn = null;
		CallableStatement cstm = null;
		boolean insertar = false;
	try {
		cn = Conexion.Instancia().getConnection();
		cstm = cn.prepareCall("{call spInsertarEmpleado(?,?,?,?,?,?,?,?,?,?,?,?,?)}");

		cstm.setString(1,emp.getUsuario());
		cstm.setString(2,emp.getPassword());
		cstm.setDate(3,(Date) emp.getFechaTermino());
		cstm.setString(4, emp.getEstado());
		cstm.setString(5, emp.getIdPersona().getDni());
		cstm.setString(6, emp.getIdPersona().getNombres());
		cstm.setString(7, emp.getIdPersona().getApellidos());
		cstm.setString(8, emp.getIdPersona().getSexo());
		cstm.setDate(9, (Date)emp.getIdPersona().getFechaNacimiento());
		cstm.setInt(10, emp.getIdPersona().getTelefono());
		cstm.setString(11, emp.getIdPersona().getCorreo());
		cstm.setInt(12, emp.getIdCargo().getIdCargo());
		cstm.setInt(13, emp.getIdSucursal().getIdSucursal());
		
		
		
		int x = cstm.executeUpdate();
		if(x>0){insertar = true;}
		
		System.out.println("(Persistencia)Registro de Empleado Exitoso... ");
		
	} catch (Exception e) {				
		System.out.println("(Persistencia)error al resgistrar Empleado !!!!!! :-(  : "+e);
		throw e;
	}finally{
		cn.close();
		cstm.close();
	}
	return insertar;
	
	}
	
	
	
	public boolean EditarEmpleado(entEmpleado emp)throws Exception{
		Connection cn = null;
		CallableStatement cstm = null;
		boolean editar = false;
	try {
		cn = Conexion.Instancia().getConnection();
		cstm = cn.prepareCall("{call spEditarEmpleado(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}");
		cstm.setString(1,emp.getUsuario());
		cstm.setString(2,emp.getPassword());
		cstm.setDate(3,(Date) emp.getFechaTermino());
		cstm.setString(4, emp.getEstado());
		cstm.setString(5, emp.getIdPersona().getDni());
		cstm.setString(6, emp.getIdPersona().getNombres());
		cstm.setString(7, emp.getIdPersona().getApellidos());
		cstm.setString(8, emp.getIdPersona().getSexo());
		cstm.setDate(9, (Date)emp.getIdPersona().getFechaNacimiento());
		cstm.setInt(10, emp.getIdPersona().getTelefono());
		cstm.setString(11, emp.getIdPersona().getCorreo());
		cstm.setInt(12, emp.getIdCargo().getIdCargo());
		cstm.setInt(13, emp.getIdSucursal().getIdSucursal());
		cstm.setInt(14, emp.getIdEmpleado());
		cstm.setInt(15, emp.getIdPersona().getIdPersona());
		int x = cstm.executeUpdate();
		if(x>0){editar = true;}
		
		System.out.println("(Persistencia)actualizacion de Empleado exitoso... ");
		
	} catch (Exception e) {				
		System.out.println("(Persistencia)Error al actualizar Empleado !!!!!! :(  : "+e);
		throw e;
	}finally{
		cn.close();
		cstm.close();
	}
	return editar;
	
	}
	
	public boolean EliminarEmpleado(int idEmpleado)throws Exception{
		Connection cn = null;
		CallableStatement cstm = null;
		boolean eliminar = false;
	try {
		cn = Conexion.Instancia().getConnection();
		cstm = cn.prepareCall("{call spEliminarEmpleado(?)}");
		cstm.setInt(1,idEmpleado);
				
		int x = cstm.executeUpdate();
		if(x>0){eliminar = true;}
		
		System.out.println("(Persistencia)Se Elimino Empleado... ");
		
	} catch (Exception e) {				
		System.out.println("(Persistencia)Nose puede Eliminar la Empleado !!!!!! :(  : "+e);
		throw e;
	}finally{
		cn.close();
		cstm.close();
	}
	return eliminar;
	
	}
	

	public entEmpleado devolverEmpId(int  idEmp)throws Exception{
		Connection cn = null;
		CallableStatement cstm = null;
		
		ResultSet rs = null;
		entEmpleado emp= null;
		boolean editar = false;
	try {
		cn = Conexion.Instancia().getConnection();
		cstm = cn.prepareCall("{call DEVOLVEROFICINAID(?)}");
		cstm.setInt(1,idEmp);
		rs = cstm.executeQuery();
		while(rs.next()){
			emp= new entEmpleado();
			emp.setIdEmpleado(rs.getInt(1));
			emp.setUsuario(rs.getString(2));
			emp.setPassword(rs.getString(3));
			emp.setFechaIngreso(rs.getDate(4));
			emp.setFechaTermino(rs.getDate(5));
			emp.setEstado(rs.getString(6));
				entPersona p = new entPersona();
				p.setIdPersona(rs.getInt(7));
				p.setDni(rs.getString(8));
				p.setNombres(rs.getString(9));
				p.setApellidos(rs.getString(10));
				p.setSexo(rs.getString(11));
				p.setFechaNacimiento(rs.getDate(12));
				p.setTelefono(rs.getInt(13));
				p.setCorreo(rs.getString(14));
			emp.setIdPersona(p);
				entCargo c = new entCargo();
				c.setIdCargo(rs.getInt(15));
				c.setNombre(rs.getString(16));
				c.setSueldo(rs.getDouble(17));
				c.setIngreso(rs.getTime(18));
				c.setSalida(rs.getTime(19));
			emp.setIdCargo(c);
				entSucursal s = new entSucursal();
				s.setIdSucursal(rs.getInt(20));
				s.setNombre(rs.getString(21));
				s.setDireccion(rs.getString(22));
			emp.setIdSucursal(s);
		}
		System.out.println("(Persistencia)devolverEmpleadoId exitoso... ");
		
	} catch (Exception e) {				
		System.out.println("(Persistencia)Error al devolverEmpleadoId !!!!!! :(  : "+e);
		throw e;
	}finally{
		cn.close();
		cstm.close();
		rs.close();
	}
	return emp;
	
	}

	
}
